@mixin sectionPadding($size) {
	> .container,
	> .container-fluid {
		padding-top: $size;
		padding-bottom: $size;

		@media (max-width: $screen-xs-max) {
			padding-top: $size*0.5;
			padding-bottom: $size*0.5;
		}
	}
	&.layered {
		> .container,
		> .container-fluid {
			@media (max-width: $screen-xs-max) {
				padding-top: $size*0.4;
			}
		}
	}
}

section {
	background-position: 50% 50%;
	background-size: cover;
	background-repeat: no-repeat;

	&.padding {
		&-lg { @include sectionPadding(150px); }
		&-md { @include sectionPadding(100px); }
		&-sm { @include sectionPadding(80px); }
		&-xs { @include sectionPadding(30px); }
	}
}




// Section modifiers
.section {

	&-list {
		ul, ol {
			list-style-type: circle;
			li {
				border: none;
				font-size: 14pt;
				padding: 0 0 10px 0;
			}
		}
	}

	&-hideBgLayers-xs {
		@media (max-width: $screen-xs-max) {
			> .layer { display: none; }
		}
	}

	&-hideBgLayers-sm {
		@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
			> .layer { display: none; }
		}
	}

	&-heading {
		padding: 10px 0;
		text-align: center;

		h1, h2, h3 {
			margin: 0;
		}
	}
}


// Wraps floating elements within an article, etc. Allows it
// to be freely sized, even when centered.
figure {
	&.align {
		// On mobile, we don't alter the style
		@media (min-width: $screen-sm-min) {
			&-left > * {
				float: left;
				padding-right: ($grid-gutter-width/2)+5px !important;
			}
			&-right > * {
				float: right;
				padding-left: ($grid-gutter-width/2)+5px !important;
			}
			&-center {
				display: block;

				> * {
					display: block;
					float: none;
					margin-left: auto;
					margin-right: auto;
				}
			}
		}
	}
	@media (max-width: $screen-xs-max) {
		margin: 30px 0;
	}
	
	> div[class^="col-"], 
	> div[class*=" col-"] {
		padding-left: 0;
		padding-right: 0;
	}
}

.btn-frame {
	&-left {
		display: inline;
		> .btn {
			float: left;
			margin-right: 10px;
		}
	}
	&-right {
		display: inline;
		> .btn {
			float: right;
			margin-left: 10px;
		}
	}
	&-full,
	&-center {
		padding: 5px 0;
		display: block;
		text-align: center;
	}
}



/*
 * Layers
 */

// Background images/elements for sections
.layered {
	position: relative;
	overflow-x: hidden;

	> * {
		position: relative;
	}
}

.layer {
  position: absolute;
	background-repeat: no-repeat;
	top: 0;
	width: 100%;
	height: 100%;

  &-full {
  	left: 0;
  	background-size: cover;
  	background-position: 50%;
		background-color: #eee;
  }

  &-right,
  &-left {
  	background-size: auto 100%; // full height

  	@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
  		// If the image is very flat, without this, it would push the image across
  		width: 2000px;
  	}
  }

  &-right {
  	background-position: 100% 50%;
  	right: 0;

    @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
      right: -200px;
      // background-position: right 350px 50%; // This is how we offset from the right, but it's not well supported on mobile
    }
  }
  &-left {
  	background-position: 0% 50%;
  	left: 0;

    @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
      left: -200px;
      // background-position: -150px 50%; // Works, but the right-aligned version doesn't
    }
  }
  &-subtle {
    opacity: 0.2 !important;
  }

  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    opacity: 0.5;
  }

	// When small, we turn this into a relative block element so it takes up it's own space
	@media (max-width: $screen-xs-max) {
		position: relative;
		height: 200px;
		// margin-bottom: -40px;
		opacity: 1;
	}
}